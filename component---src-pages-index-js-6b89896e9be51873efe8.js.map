{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["IndexPage","_ref","data","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layoutMain__WEBPACK_IMPORTED_MODULE_3__","_components_view_container__WEBPACK_IMPORTED_MODULE_4__","Fragment","className","Styles","w3Content","style","maxWidth","w3Row","w3Padding","w3Border","backgroundColor","w4Col","l8","s12","gridContainer","w3rowpadding","allMarkdownRemark","group","map","g","i","w3Third","w3Container","gridItem","width","padding","margin","border","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","fieldValue","allFile","edges","length","_ref2","node","relativePath","indexOf","gatsby_image__WEBPACK_IMPORTED_MODULE_6___default","fixed","childImageSharp","query"],"mappings":"+NAqEeA,UA5DG,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAChBC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACCH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KAEGJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAI,SAAA,KAGML,EAAAC,EAAAC,cAAA,OAAKI,UAAS,GAAKC,IAAOC,UAAaC,MAAO,CAACC,SAAS,WAGpDV,EAAAC,EAAAC,cAAA,OAAKI,UAAcC,IAAOI,MAAZ,IAAqBJ,IAAOK,UAA5B,IAAyCL,IAAOM,SAAYJ,MAAO,CAACK,gBAAgB,YAG9Fd,EAAAC,EAAAC,cAAA,OAAKI,UAAcC,IAAOQ,MAAZ,IAAqBR,IAAOS,GAA5B,IAAkCT,IAAOU,KAGnDjB,EAAAC,EAAAC,cAAA,OAAKI,UAAcC,IAAOW,cAAZ,IAA6BX,IAAOY,cAE7CpB,EAAKqB,kBAAkBC,MAAMC,IAAI,SAACC,EAAEC,GAAH,OAChCxB,EAAAC,EAAAC,cAAA,OAAKI,UAAcC,IAAOkB,QAAZ,IAAuBlB,IAAOmB,YAA9B,KAEZ1B,EAAAC,EAAAC,cAAA,OAAKI,UAAS,GAAKC,IAAOoB,SAAYlB,MAAO,CAAEmB,MAAM,QAAQC,QAAQ,MAAOC,OAAO,MAAOhB,gBAAgB,UAAUiB,OAAO,oBACzH/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAOC,GAAIV,EAAEW,YACU,MAApBnC,EAAKoC,QAAQC,OAAyC,IAA5BrC,EAAKoC,QAAQC,MAAMC,OAAW,GACvDtC,EAAKoC,QAAQC,MAAMd,IAAI,SAAAgB,GAAA,IAAEC,EAAFD,EAAEC,KAAF,OACwB,IAA3CA,EAAKC,aAAaC,QAAQlB,EAAEW,YAAiB,GAC7ClC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAI,SAAA,KACAL,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,CAAK0C,MAAOJ,EAAKK,gBAAgBD,WAQvC3C,EAAAC,EAAAC,cAAA,cAAQF,EAAAC,EAAAC,cAAA,SAAIqB,EAAEW,eAKhBlC,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,sBAsBhC,IAAM2C,EAAK","file":"component---src-pages-index-js-6b89896e9be51873efe8.js","sourcesContent":["import React from \"react\"\r\nimport {Link, graphql } from 'gatsby'\r\n\r\nimport Layout from \"../components/layoutMain\"\r\nimport Container from \"../components/view/container\"\r\nimport Styles from '../components/view/social-css-modules.module.css';\r\n//import Content from \"../components/view/contentMain\"\r\nimport Img from \"gatsby-image\"\r\n\r\nconst IndexPage = ({ data }) => (\r\n  <Layout>\r\n   <Container>\r\n  \r\n      <>\r\n            {/* w3-content defines a container for fixed size centered content, \r\n                and is wrapped around the whole page content, except for the footer in this example -->*/}\r\n            <div className={`${Styles.w3Content}`} style={{maxWidth:'1600px'}}>\r\n                \r\n                { /*-- Grid --*/}\r\n                <div className={`${Styles.w3Row} ${Styles.w3Padding} ${Styles.w3Border}`} style={{backgroundColor:'#e0eee0'}}>\r\n\r\n                    {/**** Main Entries ****/}\r\n                    <div className={`${Styles.w4Col} ${Styles.l8} ${Styles.s12}`} >\r\n                        \r\n                        {/**** First Photo Grid ******/}\r\n                        <div className={`${Styles.gridContainer} ${Styles.w3rowpadding}`}>\r\n                          \r\n                            {data.allMarkdownRemark.group.map((g,i) =>(\r\n                              <div className={`${Styles.w3Third} ${Styles.w3Container} `}>\r\n                                \r\n                                <div className={`${Styles.gridItem}`} style={{ width:'200px',padding:'0px', margin:'5px', backgroundColor:'#00843e',border:'1px solid black'}}>\r\n                                  <Link  to={g.fieldValue}>\r\n                                    {data.allFile.edges==null||data.allFile.edges.length===0?'':\r\n                                      data.allFile.edges.map(({node})=>(\r\n                                          node.relativePath.indexOf(g.fieldValue)===-1?'':\r\n                                          <>\r\n                                          <Img fixed={node.childImageSharp.fixed} />\r\n                                              {/** <img src={node.childImageSharp.original.src} \r\n                                                  alt=\"\"\r\n                                                  style={{width:'100%',height:'200px'}} className={`${Styles.w3HoverOpacity}`}    />\r\n                                              */}\r\n                                          </>\r\n                                      ))\r\n                                    }\r\n                                    <center><b>{g.fieldValue}</b></center> \r\n                                      </Link>\r\n                                  </div>\r\n                                \r\n                                  \r\n                                  <br/><br/>\r\n                              </div>\r\n\r\n                              \r\n                              ))}\r\n                            \r\n                        </div>\r\n                        {/** End First Phot Grid */}\r\n                        \r\n                    </div>\r\n                     {/****End Main Entries ****/}\r\n                </div>\r\n            </div>\r\n            </>\r\n\r\n    \r\n    </Container>\r\n  </Layout>\r\n)\r\n\r\nexport default IndexPage\r\n\r\nexport const query = graphql`\r\nquery {\r\n  allMarkdownRemark(filter: {frontmatter: {type: {in:[\"Rock Art\",\"Kingdoms\",\"Architecture\",\"Ruins\",\"Metal\"]}}}) {\r\n      group(field: frontmatter___type) {\r\n        fieldValue\r\n        totalCount\r\n      }\r\n    }\r\n\r\n    allFile(filter:{relativePath:{glob:\"indx/*\"}}){\r\n      edges{\r\n        node{\r\n          id\r\n          relativePath\r\n          childImageSharp{\r\n            fluid(maxWidth: 300){\r\n             ...GatsbyImageSharpFluid\r\n            }\r\n            fixed(width: 197, height: 197) {\r\n              ...GatsbyImageSharpFixed\r\n            }\r\n            original{\r\n             src\r\n           }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n}\r\n`"],"sourceRoot":""}